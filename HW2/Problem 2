import numpy as np
from sklearn.cluster import KMeans
from pyclustering.cluster.kmedians import kmedians
import matplotlib.pyplot as plt

##### simulate data set
x = np.random.uniform(1.5, 1.8, 8)
x = np.append(x, np.random.uniform(2.5, 2.8, 8) )
x = np.append(x, 5)
y = np.random.uniform(1.5, 1.8, 8)
y = np.append(y, np.random.uniform(2.5, 2.8, 8) )
y = np.append(y, 5)
data = np.c_[x, y]

##### K-Means
kmeans_classifier = KMeans(n_clusters= 2).fit(data)
data = np.c_[kmeans_classifier.labels_, data]
filtered_label0 = data[data[:, 0]==0]
filtered_label1 = data[data[:, 0]==1]

##### K-Medians
sample = data[:, 1:3].tolist()
initial_medians = [sample[1], sample[-2]]
kmedians_instance = kmedians(sample, initial_medians)
kmedians_instance.process()
clusters = kmedians_instance.get_clusters()
medians = kmedians_instance.get_medians()
first_cluster = [sample[i] for i in clusters[0]]
second_cluster = [sample[i] for i in clusters[1]]

##### Plot
fig, (ax1, ax2) = plt.subplots(1, 2)
#fig.suptitle("K-Means vs K-Medians")
ax1.scatter(filtered_label0[:,1] , filtered_label0[:,2], color = "red")
ax1.scatter(filtered_label1[:,1] , filtered_label1[:,2], color = "black")
ax1.set_title("K-Means")
ax2.scatter(np.array(first_cluster)[:,0] , np.array(first_cluster)[:,1], color = "red")
ax2.scatter(np.array(second_cluster)[:,0] , np.array(second_cluster)[:,1], color = "black")
ax2.set_title("K-Medians")
plt.show()
